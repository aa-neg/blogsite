---
layout: post
title:  "The leap into linux"
date:   2016-06-23 08:40:09 +1100
categories: Arch Linx, Xmonad
---

Since at work now my development environment is within a linux VM (through docker) I decided it would be a good idea to install a linux distro for my own personal use. There were several things I wanted to learn from doing so:
    
    1) I wanted to see the steps and process for the layers of the computer system from kernel to GUI
    2) I wanted to hopefully begin to learn to create a terminal development environment
    3) It should be fun to have a small side project linux lappy 

I bought a refurbished thinkpad-t430 from <a>http://www.reboot-it.com.au/used-lenovo-thinkpad-t430-core-i5-3320m-3.3ghz-4gb-320gb-dvd-win-7-webcam-14-cheap.html</a> . I was surprised how cheap it was (400 bucks with shipping) and it was quite legit. The clock was still back in 2012 however since installing Arch I havn't had any problems (yet). I can honestly recommend it.

Asking some mates for advice I decided to install Arch Linux <a>https://www.archlinux.org/</a> . This is mainly due to the fact it was very lightweight and allowed me to see all the steps from formatting my boot usb till I was able to load my computer without it. I wasn't looking for something plug and play as I wouldn't have been able to learn anything (I already have a working desktop computer). I can see why people would not recommend this setup if you aren't interested and just want to get on with your work however I do think It is really rewarding from a developer point of view on setting up a work box that you know whats in it (especially as a laptop). 

I followed this guide for the installation <a>http://gloriouseggroll.tv/arch-linux-efi-install-guide/</a> he also described why he did some choices (such as adding a swap) and what each step was actually doing. So after the first attempted I obviously had messed up and forgot to properly install all the wifi drivers which led to the awkward part of having to plug in an ethernet cable and installing the drivers. I then ran into the issue of the fact that a service was spawned from linking the ethernet to the device and I had to then learn what services were. So all in all it was a great experience I have a better idea of what happens when my computer starts up (what services run) and what several of the services actually do.

So after installing arch linux you are left with a terminal interface to your computer. Which would be fine however to do any real work you'd need multiple work stations (multiple terminals / virtual desktops) plus you can't run a modern browser (lynx is fine however). I was deciding between installing I3WM <a>https://i3wm.org/</a> and xmonad <a>http://xmonad.org/tour.html</a> my mate had installed xmonad for his system so I decided with that. To be honest I don't think the choice really mattered however. After following the guide on the xmonad site I have quite a rough setup with an xmo bar. I do like the idea of having the /.xinitrc file and setting it up with all the services / processes that need to start (for example I load redshift <a>https://wiki.archlinux.org/index.php/Redshift</a>(a f.lux option for linux)).

So after setting up my xmonad I can now turn on my computer log in as my user then 'startx' and I'm off to start working. Something I've been trying to move towards is a terminal based development environment. I started development by coding through python's idle at first then moving from IDE to IDE. As i mentioned earlier since my development at work has been moving towards VM's and docker I was becoming much more comfortable with the terminal interface and I could see many benefits of merging my text editing and running in the same 'environment'. So with xmonad I have been forcing myself to learn the terminal vim. Currently all my text editing is done through sublime with the vim plugin for some of the keys however search and replace etc I still use the sublime keys or even highlight with the mouse. I think once I learn to integrate terminal vim i'll have very little need for the mouse and my development can stay on the keyboard (even for web browsing with the vimperator / cVim plugins for firefox and chromium respectively). 

The entire experience has been really rewarding and i'm still very far from completing it as I think i've only just stepped into the world of linux. Before this I wasn't sure what the fuss was with 'linux is obviously better' as there wern't always very clear reasons presented. I guess the reasons i see now are a customizable development box without the bloat ware and difficulty installing and setting up environment variables that windows has. In addition since I use docker quite a bit , having native containers makes life much easier (don't have to deal with the vm settings port forwarding etc). I also like how you can customize your desktop to fit your workflow (much easier than you can in windows). I don't see linux being used as an everyday machine however to get actual development work done I can say it really is perfect. Customizing your machine to assist your development means that the tool your use fits you rather than you having to constantly work around the tool you are presented with.

So if you are thinking about getting into programming I wouldn't recommend going out and buying a computer to setup linux on straight away (i'd recommend just coding you probably already have a computer (running windows or OSX) when starting out I think its important to just code and not have to deal with these nuances). However if you are interested in the idea of a customizable environment or are interested in improving your development workflow I can't recommend trying a linux setup enough. It is fiddly (well maybe it isn't but from arch linux it is) for the average person however as a developer I think it is worth the effort as you are able to tailor your environment into the machine. So yeah I guess this is the milestone of hopefully moving towards a terminal development environment.